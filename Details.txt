Ce este Virtual Service si Destinaton Rules ?

Pe scurt:
 - VirtualService:
    - Rol: Controlează rutarea traficului către diferitele versiuni (sau subseturi) ale unui serviciu, pe baza unor criterii specifice (de exemplu, anteturi, parametri de query, sau alte condiții de potrivire).
    - Nivel de vizibilitate: VirtualService operează la nivel de serviciu și definește reguli pentru traficul direcționat către un anumit serviciu din cluster.
    - Exemplu de utilizare: Rutarea către o versiune specifică (ex: v1, v2) a unui serviciu pe baza unui antet HTTP, sau rutare canary pentru testarea unei versiuni noi cu un procent redus din trafic.

 - DestinationRules (decide cum se comportă conexiunea odată ajunsă la destinație).
    - Rol: este folosit pentru a crea 'subset-uri' (versiuni, certificate mTLS, etc) 
    - Nivel de vizibilitate: DestinationRule operează la nivel de destinație și se aplică instanțelor unui serviciu (pod-uri), permițând configurarea de politici avansate.
    - Exemplu de utilizare: Definirea subseturilor v1, v2 ale unui serviciu și configurarea conexiunilor TLS pentru a asigura securitatea între microservicii.

Exemple:

1. VirtualService

```yaml
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: example-virtualservice
spec:
  hosts:
    - "example.com" # Numele serviciului care contine pod-urile/subset-urile la care vrem sa trimitem traficul primit in acest VirtualService 
                    # => poate necesita numele intreg de DNS: "<nume-svc>.<nume-ns>.svc.cluster.local"
  http:
    - match:
        - headers:
            x-request-id:
              exact: "some-value"
      route:
        - destination:
            host: app-backend-service
            subset: v1 # Catre ce subset se ruteaza traficul (acesta fiind caracterizat in `DestinationRules` )
            port:
              number: 8080
          weight: 100
    - route:
        - destination:
            host: app-backend-service
            subset: v2
            port:
              number: 8080
          weight: 100
```

În acest exemplu:

 - Traficul care are un antet x-request-id cu valoarea "some-value" este direcționat către instanțele din subsetul v1 al serviciului app-backend-service.
 - Restul cererilor sunt procesate în mod normal, dar consistent hashing se va aplica astfel încât aceleași valori ale antetului vor duce la aceleași instanțe de serviciu.

! Important: Unde avem `route.subset: <nume-subset>` -> acolo ne spune catre ce subset se ruteaza traficul (acesta fiind caracterizat in `DestinationRules` )
